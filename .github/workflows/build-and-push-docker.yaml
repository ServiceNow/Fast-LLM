name: Build and Push Docker Image

on:
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed

jobs:
  build:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean unused files
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Restore Docker layers cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: docker_build
        run: |
          IMAGE_NAME="servicenowdocker/fast-llm"
          GIT_COMMIT_HASH=$(git rev-parse --short HEAD)

          TAG_OPTION=""
          TAG_OPTION="-t ${IMAGE_NAME}:${GIT_COMMIT_HASH} -t ${IMAGE_NAME}:latest"

          # If it's a tagged release, add the git tag as a docker tag
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
            TAG_OPTION="${TAG_OPTION} -t ${IMAGE_NAME}:${TAG_NAME}"
          fi

          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache \
                              --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
                              --push ${TAG_OPTION} .

      - name: Save updated Docker cache
        id: save-cache
        uses: actions/cache/save@v4
        with:
          path: /tmp/.buildx-cache-new
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}
